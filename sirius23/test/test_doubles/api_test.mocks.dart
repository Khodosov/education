// Mocks generated by Mockito 5.3.2 from annotations
// in sirius23/test/test_doubles/api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sirius23/application/api.dart' as _i2;
import 'package:sirius23/application/messenger.dart' as _i6;
import 'package:sirius23/models/message.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i2.Api {
  MockApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.User?> get currentUserStream => (super.noSuchMethod(
        Invocation.getter(#currentUserStream),
        returnValue: _i3.Stream<_i4.User?>.empty(),
      ) as _i3.Stream<_i4.User?>);
  @override
  _i3.Stream<List<_i5.Message>> get messages => (super.noSuchMethod(
        Invocation.getter(#messages),
        returnValue: _i3.Stream<List<_i5.Message>>.empty(),
      ) as _i3.Stream<List<_i5.Message>>);
  @override
  _i3.Future<void> init(_i6.Messenger? messenger) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [messenger],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void post(String? message) => super.noSuchMethod(
        Invocation.method(
          #post,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}
